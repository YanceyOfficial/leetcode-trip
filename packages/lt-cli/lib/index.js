import n from"chalk";import t from"clear";import e from"figlet";import{select as o,search as a}from"@inquirer/prompts";import{readdirSync as r,readFileSync as s,existsSync as c,writeFileSync as i}from"node:fs";import{kebabCase as m}from"change-case";import l from"ora";import{sleep as u}from"yancey-js-util";import{execa as d}from"execa";import f from"node-fetch";import{compareVersions as p}from"compare-versions";var y;!function(n){n.Easy="easy",n.Medium="medium",n.Hard="hard"}(y||(y={}));const $=`${process.cwd()}/src/leetcode/javascript`,g=`${process.cwd()}/src/leetcode/rust`,h=`${process.cwd()}/leetcode-docs`,b=[{name:y.Easy,value:y.Easy},{name:y.Medium,value:y.Medium},{name:y.Hard,value:y.Hard}],w=(n,t)=>{const e=s(`${$}/${n}/${t}`,{encoding:"utf-8"}),[o,a]=t.split("."),{functionName:r,functionBody:c}=(n=>{const t=n.match(/\/\/ @lc code=start([\s\S]*)?\/\/ @lc code=end/im);if(Array.isArray(t)){const n=t[1],e=n.match(/var([\s\S]*?)=/i);if(Array.isArray(e)){const t=e[1].trim();return{functionBody:n,functionName:m(t)}}throw new Error("Can not get the function name string.")}throw new Error("Can not get the function body string.")})(e);return{outPath:`${h}/${n.toLowerCase()}/${o}-${r}.mdx`,meta:{serial:o,title:a,functionName:r,functionBody:c}}},v=(n,t)=>a({message:"请选择文件: ",source:async n=>t.filter((t=>t.name.includes(n||""))),validate:t=>((n,t)=>{const{outPath:e}=w(n,t);return!c(e)||"文件已存在, 请重新选择."})(n,t)}),E=async(n,t)=>{const e=w(n,t);if("object"!=typeof e)return;const{outPath:o,meta:{serial:a,title:s,functionBody:c,functionName:m}}=e,d=l("正在创建中...").start();await u(),i(o,((n,t,e,o)=>`---\nid: ${n}-${e}\ntitle: ${t}\nsidebar_label: ${n}. ${t}\nkeywords:\n  - HashMap\n---\n\n:::success Tips\n题目类型: HashMap\n\n相关题目:\n\n- [1. 两数之和](/leetcode/easy/1-two-sum)\n\n:::\n\n## 题目\n\n这里是题目这里是题目这里是题目这里是题目这里是题目\n\n:::note 提示:\n\n- xxxxxxxxx\n\n:::\n\n:::info 示例\n\n输入:\n\n输出:\n:::\n\n## 题解\n\n这里是题解这里是题解这里是题解这里是题解这里是题解\n\nimport Tabs from '@theme/Tabs'\nimport TabItem from '@theme/TabItem'\n\n<Tabs>\n  <TabItem value="JavaScript" label="JavaScript" default>\n\n\`\`\`ts\n${o}\n\`\`\`\n\n</TabItem>\n<TabItem value="Rust" label="Rust">\n\n\`\`\`rust\npub fn foo() -> () {\n}\n\`\`\`\n\n</TabItem>\n</Tabs>\n`)(a,s,m,c)),i(`${g}/src/${n}/question_${a}.rs`,"#[allow(unused)]\npub fn foo() -> () {}\n"),(n=>{const t=r(`${g}/src/${n}`).filter((n=>"mod.rs"!==n)).map((n=>`pub mod ${n.replace(".rs","")};`));i(`${g}/src/${n}/mod.rs`,t.join("\n"))})(n),d.stop(),l().succeed("模版创建成功!")},x=async()=>{t(),console.log(n.blue(e.textSync("LEETCODE TRIP",{horizontalLayout:"default",verticalLayout:"default"})));try{const n=await(async()=>o({message:"请选择难度: ",choices:b}))(),t=r(`${$}/${n}`).sort(((n,t)=>+n.split(".")[0]-+t.split(".")[0])).map((n=>({name:n,value:n}))),e=await v(n,t);await E(n,e)}catch(n){n instanceof Error&&"ExitPromptError"===n.name&&console.log("Goodbye~")}},T=r(`${$}/${y.Easy}`).length,H=r(`${$}/${y.Medium}`).length,I=r(`${$}/${y.Hard}`).length,M=T+H+I,j=[{category:y.Easy,count:T},{category:y.Medium,count:H},{category:y.Hard,count:I},{category:"Total",count:M}],P=()=>{console.table(j)},S=async t=>{const e=await(async()=>{const n=await f("https://registry.npmjs.org/@yancey-inc/lt-cli"),t=await n.json(),{latest:e}=t["dist-tags"];return e})(),o=1===p(e,t);return o?console.log(n.red(`\n最新版本为 v${e}, 你的版本 v${t} 已落后, 正在升级中.`)):console.log(n.green(`\n已经是最新版本 v${e}, 无需升级.`)),o},A=async t=>{const e=l("正在检索最新版本...").start(),o=await S(t);e.stop(),o&&await(async()=>{const t=l("正在升级...").start();try{await d("pnpm",["install","@yancey-inc/lt-cli@latest","-g","--verbose"],{stdio:"inherit"}),l().succeed("升级成功!")}catch(t){console.log(n.red(t instanceof Error?t.message:"Unknown Error"))}finally{t.stop()}})()};export{x as bootstrap,P as showStatistics,A as upgrade};
